#!/bin/bash

##
# These tests are setup to run against latest by default, but
# should be able to be overriden for other environments
##

: ${CATTLE_TEST_URL:="http://latest.rancher.io"}
: ${PHANTOMJS_WEBDRIVER_PORT:-4444}
: ${API_AUTH_GITHUB_TEST_USER:-$API_AUTH_GITHUB_TEST_USER}
: ${API_AUTH_GITHUB_TEST_PASS:-$API_AUTH_GITHUB_TEST_PASS}
: ${API_AUTH_GITHUB_CLIENT_ID:-$API_AUTH_GITHUB_CLIENT_ID}
: ${API_AUTH_GITHUB_CLIENT_SECRET:-$API_AUTH_GITHUB_CLIENT_SECRET}
: ${API_AUTH_RANCHER_TEST_PASS:-$API_AUTH_RANCHER_TEST_PASS}
: ${DIGITALOCEAN_KEY:-$DIGITALOCEAN_KEY}
: ${AMAZON_ACCESSKEY:-$AMAZON_ACCESSKEY}
: ${AMAZON_SECRETKEY:-$AMAZON_SECRETKEY}
: ${CATTLE_ACCESS_KEY:-$CATTLE_ACCESS_KEY}
: ${CATTLE_SECRET_KEY:-$CATTLE_SECRET_KEY}
: ${CATTLE_PROJECT_ACCESS_KEY:-$CATTLE_PROJECT_ACCESS_KEY}
: ${CATTLE_PROJECT_SECRET_KEY:-$CATTLE_PROJECT_SECRET_KEY}
: ${VALIDATION_JUNIT_XML_PATH:="/opt/logs/validation-tests/"}
: ${VALIDATION_JUNIT_XML_FILE:="validationTestsJunit.xml"}

export CATTLE_TEST_URL PHANTOMJS_WEBDRIVER_PORT CATTLE_ACCESS_KEY CATTLE_SECRET_KEY
export API_AUTH_GITHUB_TEST_USER API_AUTH_GITHUB_TEST_PASS
export API_AUTH_GITHUB_CLIENT_ID API_AUTH_RANCHER_TEST_PASS API_AUTH_GITHUB_CLIENT_SECRET
export DIGITALOCEAN_KEY
export AMAZON_SECRETKEY
export AMAZON_ACCESSKEY

cd $(dirname $0)/..

wrapdocker >/dev/null 2>&1

notify()
{
    MESSAGE=${1} ../scripts/slack-notification 
}

notify_alert()
{
    message="<!channel>: ${1}"
    MESSAGE=${message} ../scripts/slack-notification
}

send_failures()
{
    if [ -f "${1}" ];
    then
        notify $(docker run -it -v ${1}:${1} cloudnautique/ci-tool ./ci-tool ${1})
    else
        echo Log file ${1} Not Found.
    fi
}

bootstrap_validation_tests()
{
    cd validation-tests
    docker build --rm -t validation-test-container .
    cd ..
}


run_tests() 
{
    cd validation-tests

    notify "Starting Test Run..."
    docker run -e "CATTLE_TEST_URL=${CATTLE_TEST_URL}" \
        -e "PHANTOMJS_WEBDRIVER_PORT=${PHATOMJS_WEBDRIVER_PORT}" \
        -e "API_AUTH_GITHUB_TEST_USER=${API_AUTH_GITHUB_TEST_USER}" \
        -e "API_AUTH_GITHUB_TEST_PASS=${API_AUTH_GITHUB_TEST_PASS}" \
        -e "API_AUTH_GITHUB_CLIENT_ID=${API_AUTH_GITHUB_CLIENT_ID}" \
        -e "API_AUTH_RANCHER_TEST_PASS=${API_AUTH_RANCHER_TEST_PASS}" \
        -e "API_AUTH_GITHUB_CLIENT_SECRET=${API_AUTH_GITHUB_CLIENT_SECRET}" \
        -e "CATTLE_SECRET_KEY=${CATTLE_SECRET_KEY}" \
        -e "CATTLE_ACCESS_KEY=${CATTLE_ACCESS_KEY}" \
        -e "DIGITALOCEAN_KEY=${DIGITALOCEAN_KEY}" \
        -e "AMAZON_SECRETKEY=${AMAZON_SECRETKEY}" \
        -e "AMAZON_ACCESSKEY=${AMAZON_ACCESSKEY}" \
        -v $(pwd):/source \
        -e VALIDATION_JUNIT_XML_FILE=${VALIDATION_JUNIT_XML_FILE} \
        -v ${VALIDATION_JUNIT_XML_PATH}:/target \
        validation-test-container ./scripts/test
    if [ "$?" -eq "0" ]; then
        notify "Tests all Passed"
    else
        notify_alert "Rancher Latest Had Validation Test Failures!!!!"
        send_failures "${VALIDATION_JUNIT_XML_PATH}/${VALIDATION_JUNIT_XML_FILE}"
    fi
}

wait_a_bit()
{
    echo -n "."
    sleep 6
}

echo -n "Checking for ${CATTLE_TEST_URL} to become available "
for ((i=0;i<300;i++))
do
    if [[ "$(curl -s ${CATTLE_TEST_URL}/ping)" = "pong" ]]; then
        CURL_USER_OPTS="-u ${CATTLE_PROJECT_ACCESS_KEY}:${CATTLE_PROJECT_SECRET_KEY}"
        if [[ -z "${CATTLE_PROJECT_ACCESS_KEY}" ]] || [[ -z "${CATTLE_PROJECT_ACCESS_KEY}" ]]; then
            CURL_USER_OPTS=
        fi

    	host_count=$(curl -s ${CURL_USER_OPTS} ${CATTLE_TEST_URL}/v1/projects/1a5/hosts|python -mjson.tool|grep '"id"'|grep "1h.*"|wc -l)
	    if [ "$host_count" -ge "3" ]; then
            echo "OK"
            break
        else
	        wait_a_bit
        fi
    else
        wait_a_bit
    fi

    ### If we don't get a response after 30 mins... give up.
    if [ "$i" -eq "299" ]; then
        echo "Failed to reach environment" 1>&2
        notify_alert "Rancher latest environment failed to respond... no tests run."
        exit 1
    fi
done

bootstrap_validation_tests
run_tests
