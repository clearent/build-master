: ${CATTLE_REPO:="https://github.com/clearent/cattle.git"}
: ${CATTLE_WORK_DIR:=cattle}
: ${CATTLE_COMMIT:=v0.165.8-clearent}

: ${PYTHON_AGENT_REPO:="https://github.com/rancher/python-agent.git"}
: ${PYTHON_AGENT_WORK_DIR:=python-agent}
: ${PYTHON_AGENT_COMMIT:=master}

: ${HOST_API_REPO:="https://github.com/rancher/host-api.git"}
: ${HOST_API_WORK_DIR:=host-api}
: ${HOST_API_COMMIT:=master}

: ${UI_REPO:="https://github.com/rancher/ui.git"}
: ${UI_WORK_DIR:=ui}
: ${UI_COMMIT:=tags/v1.1.12}

: ${VALIDATION_TESTS_REPO:="https://github.com/rancher/validation-tests.git"}
: ${VALIDATION_TESTS_WORK_DIR:=validation-tests}
: ${VALIDATION_TESTS_COMMIT:=master}

: ${NODE_AGENT_REPO:="https://github.com/rancher/node-agent.git"}
: ${NODE_AGENT_WORK_DIR:=node-agent}
: ${NODE_AGENT_COMMIT:=master}

: ${BUILD_TOOLS_REPO:="https://github.com/rancher/build-tools.git"}
: ${BUILD_TOOLS_COMMIT:=master}

: ${CATTLE_UI_URL:="//releases.rancher.com/ui/1.1.12"}

: ${CATTLE_LOGBACK_OUTPUT_CONSOLE:="true"}
: ${CATTLE_LOGBACK_OUTPUT_LOGSTASH_CONSOLE:="false"}

: ${DEFAULT_CATTLE_MACHINE_EXECUTE:="true"}
: ${DEFAULT_CATTLE_CATALOG_EXECUTE:="true"}
: ${DEFAULT_CATTLE_COMPOSE_EXECUTOR_EXECUTE:="true"}

: ${CATTLE_RANCHER_COMPOSE_VERSION:="latest"}
: ${DEFAULT_CATTLE_RANCHER_COMPOSE_LINUX_URL:="https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-linux-amd64.tar.gz"}
: ${DEFAULT_CATTLE_RANCHER_COMPOSE_DARWIN_URL:="https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-darwin-amd64.tar.gz"}
: ${DEFAULT_CATTLE_RANCHER_COMPOSE_WINDOWS_URL:="https://releases.rancher.com/compose/${CATTLE_RANCHER_COMPOSE_VERSION}/rancher-compose-windows-386.zip"}

declare -A PROJECT_MAP

PROJECT_MAP[CATTLE_REPO]="${CATTLE_REPO}"
PROJECT_MAP[CATTLE_WORK_DIR]="${CATTLE_WORK_DIR}"
PROJECT_MAP[CATTLE_COMMIT]="${CATTLE_COMMIT}"

PROJECT_MAP[NODE_AGENT_REPO]="${NODE_AGENT_REPO}"
PROJECT_MAP[NODE_AGENT_WORK_DIR]="${NODE_AGENT_WORK_DIR}"
PROJECT_MAP[NODE_AGENT_COMMIT]="${NODE_AGENT_COMMIT}"

PROJECT_MAP[UI_REPO]="${UI_REPO}"
PROJECT_MAP[UI_WORK_DIR]="${UI_WORK_DIR}"
PROJECT_MAP[UI_COMMIT]="${UI_COMMIT}"

PROJECT_MAP[VALIDATION_TESTS_REPO]="${VALIDATION_TESTS_REPO}"
PROJECT_MAP[VALIDATION_TESTS_WORK_DIR]="${VALIDATION_TESTS_WORK_DIR}"
PROJECT_MAP[VALIDATION_TESTS_COMMIT]="${VALIDATION_TESTS_COMMIT}"

PROJECT_MAP[PYTHON_AGENT_REPO]="${PYTHON_AGENT_REPO}"
PROJECT_MAP[PYTHON_AGENT_WORK_DIR]="${PYTHON_AGENT_WORK_DIR}"
PROJECT_MAP[PYTHON_AGENT_COMMIT]="${PYTHON_AGENT_COMMIT}"

PROJECT_MAP[HOST_API_REPO]="${HOST_API_REPO}"
PROJECT_MAP[HOST_API_WORK_DIR]="${HOST_API_WORK_DIR}"
PROJECT_MAP[HOST_API_COMMIT]="${HOST_API_COMMIT}"
PROJECT_MAP[HOST_API_PACKAGE]="true"

export PROJECT_MAP CATTLE_API_UI_INDEX
export CATTLE_LOGBACK_OUTPUT_CONSOLE CATTLE_LOGBACK_OUTPUT_LOGSTASH_CONSOLE
export DEFAULT_CATTLE_MACHINE_EXECUTE
export CATTLE_RANCHER_COMPOSE_VERSION DEFAULT_CATTLE_RANCHER_COMPOSE_LINUX_URL DEFAULT_CATTLE_RANCHER_COMPOSE_DARWIN_URL DEFAULT_CATTLE_RANCHER_COMPOSE_WINDOWS_URL

# These projects will be checked out and managed via git-man script
export GIT_PROJECTS=("CATTLE" "NODE_AGENT" "PYTHON_AGENT" "HOST_API" "UI" "VALIDATION_TESTS")

# These projects will be checked for build by build-projects script
export BUILD_PROJECTS=("CATTLE" "NODE_AGENT" "PYTHON_AGENT" "HOST_API")
